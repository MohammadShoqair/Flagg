#del01
fun scandinavian-flag(top, middle, bot,boot) :
 overlay(
    rectangle(25,200, "solid", top),
    
   
  overlay(
      rectangle(300,20, "solid", middle),
    overlay(
        rectangle(300,40, "solid", boot),
    overlay(
          rectangle(40,200, "solid", boot),
    overlay(
            rectangle(30,40, "solid", boot),
            rectangle(300, 200, "solid", bot)
  
  )
  
  )
  
  )
  )
  )
end


print(scandinavian-flag("navy", "navy", "red", "white"))  # Norway
print(scandinavian-flag("yellow", "yellow", "blue", "yellow")) # Sweden
print(scandinavian-flag("white", "white", "red", "white"))   # Denmark
print(scandinavian-flag("blue", "blue", "white", "blue"))   # Finland
#---------------------------------------------------------------------------
#del02
include shared-gdrive(
  "dcic-2021",
  "1wyQZj_L0qqV9Ekgr9au6RX2iqt2Ga8Ep")

include gdrive-sheets
include data-source
include tables

ssid = "1RYN0i4Zx_UETVuYacgaGfnFcv4l9zd9toQTTdkQkj7g"
kWh-wealthy-consumer-data =
  load-table: komponent, energi
    source: load-spreadsheet(ssid).sheet-by-name("kWh", true)
    sanitize energi using string-sanitizer
  end

fun energi-to-number(str :: String) -> Number:
  cases(Option) string-to-number(str):
    | some(a) => a
    | none => 0
  end

where:
  energi-to-number("") is 0
  energi-to-number("48") is 48
end

transformert = transform-column(kWh-wealthy-consumer-data, "energi", energi-to-number)
#transformert

sum(transformert, "energi")

fun bilforkbruk-energi(reise-avstand-per-dag):
  num-round((reise-avstand-per-dag / 12) * 10)
end


bil-energi = bilforkbruk-energi(37.6)

energi-kolonne = transformert
  .get-column("energi")
  .set(0, bil-energi)

ny-tabell = [table-from-columns:
  {"komponent"; transformert.get-column("komponent")},
  {"energi"; energi-kolonne}
]

total-energiforbruk = sum(ny-tabell, "energi")

"Totalt energiforbruk for en typisk Nordmann er " + num-to-string(total-energiforbruk) + "kWh/dag."

bar-chart(ny-tabell, "komponent", "energi")
